
[
  {
    "id": 1,
    "title": "Getting Started with TypeScript",
    "slug": "getting-started-with-typescript",
    "excerpt": "Learn the basics of TypeScript and how to set up your first project with this powerful JavaScript superset.",
    "date": "2023-03-15",
    "author": "John Doe",
    "coverImage": "/placeholder.svg",
    "isPinned": true,
    "contentMultiLang": [
      {
        "lang": "eng",
        "content": "# Getting Started with TypeScript\n\nTypeScript is a powerful superset of JavaScript that adds static type-checking and other features to enhance the development experience.\n\n## Why TypeScript?\n\nTypeScript helps catch errors during development rather than at runtime, which can save a lot of debugging time.\n\n## Setting Up Your First Project\n\n1. Install TypeScript globally:\n```\nnpm install -g typescript\n```\n\n2. Initialize a new TypeScript project:\n```\nmkdir my-ts-project\ncd my-ts-project\ntsc --init\n```\n\n3. Create your first .ts file:\n```typescript\nfunction greet(name: string): string {\n  return `Hello, ${name}!`;\n}\n\nconsole.log(greet(\"World\"));\n```\n\n4. Compile your TypeScript code:\n```\ntsc\n```\n\nCongratulations! You've created your first TypeScript project."
      },
      {
        "lang": "id",
        "content": "# Memulai dengan TypeScript\n\nTypeScript adalah superset JavaScript yang kuat yang menambahkan pemeriksaan tipe statis dan fitur lain untuk meningkatkan pengalaman pengembangan.\n\n## Mengapa TypeScript?\n\nTypeScript membantu menangkap kesalahan selama pengembangan daripada saat runtime, yang dapat menghemat banyak waktu debugging.\n\n## Menyiapkan Proyek Pertama Anda\n\n1. Instal TypeScript secara global:\n```\nnpm install -g typescript\n```\n\n2. Inisialisasi proyek TypeScript baru:\n```\nmkdir my-ts-project\ncd my-ts-project\ntsc --init\n```\n\n3. Buat file .ts pertama Anda:\n```typescript\nfunction sapa(nama: string): string {\n  return `Halo, ${nama}!`;\n}\n\nconsole.log(sapa(\"Dunia\"));\n```\n\n4. Kompilasi kode TypeScript Anda:\n```\ntsc\n```\n\nSelamat! Anda telah membuat proyek TypeScript pertama Anda."
      }
    ],
    "content": "# Getting Started with TypeScript\n\nTypeScript is a powerful superset of JavaScript that adds static type-checking and other features to enhance the development experience.\n\n## Why TypeScript?\n\nTypeScript helps catch errors during development rather than at runtime, which can save a lot of debugging time.\n\n## Setting Up Your First Project\n\n1. Install TypeScript globally:\n```\nnpm install -g typescript\n```\n\n2. Initialize a new TypeScript project:\n```\nmkdir my-ts-project\ncd my-ts-project\ntsc --init\n```\n\n3. Create your first .ts file:\n```typescript\nfunction greet(name: string): string {\n  return `Hello, ${name}!`;\n}\n\nconsole.log(greet(\"World\"));\n```\n\n4. Compile your TypeScript code:\n```\ntsc\n```\n\nCongratulations! You've created your first TypeScript project.",
    "tags": ["TypeScript", "JavaScript", "Programming"]
  },
  {
    "id": 2,
    "title": "Mastering React Hooks",
    "slug": "mastering-react-hooks",
    "excerpt": "Dive deep into React hooks and learn how to use them effectively in your React applications.",
    "date": "2023-05-22",
    "author": "John Doe",
    "coverImage": "/placeholder.svg",
    "isPinned": false,
    "contentMultiLang": [
      {
        "lang": "eng",
        "content": "# Mastering React Hooks\n\nReact Hooks have revolutionized how we write React components, allowing us to use state and lifecycle features without classes.\n\n## Common Built-in Hooks\n\n### useState\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = React.useState(0);\n  \n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n### useEffect\n\n```jsx\nfunction DataFetcher() {\n  const [data, setData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n      \n    return () => {\n      // Cleanup function\n    };\n  }, []); // Empty dependency array means this runs once on mount\n  \n  return data ? <DisplayData data={data} /> : <Loading />;\n}\n```\n\n## Custom Hooks\n\nCreating custom hooks allows you to extract component logic into reusable functions.\n\n```jsx\nfunction useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  React.useEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  return size;\n}\n```\n\nHooks have transformed React development, making code more concise and easier to understand."
      },
      {
        "lang": "id",
        "content": "# Menguasai React Hooks\n\nReact Hooks telah merevolusi cara kita menulis komponen React, memungkinkan kita menggunakan fitur state dan lifecycle tanpa kelas.\n\n## Hooks Bawaan yang Umum\n\n### useState\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = React.useState(0);\n  \n  return (\n    <div>\n      <p>Anda mengklik {count} kali</p>\n      <button onClick={() => setCount(count + 1)}>\n        Klik saya\n      </button>\n    </div>\n  );\n}\n```\n\n### useEffect\n\n```jsx\nfunction DataFetcher() {\n  const [data, setData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n      \n    return () => {\n      // Fungsi pembersihan\n    };\n  }, []); // Array dependensi kosong berarti ini berjalan sekali saat mount\n  \n  return data ? <DisplayData data={data} /> : <Loading />;\n}\n```\n\n## Hooks Kustom\n\nMembuat hooks kustom memungkinkan Anda mengekstrak logika komponen menjadi fungsi yang dapat digunakan kembali.\n\n```jsx\nfunction useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  React.useEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  return size;\n}\n```\n\nHooks telah mengubah pengembangan React, membuat kode lebih ringkas dan lebih mudah dipahami."
      }
    ],
    "content": "# Mastering React Hooks\n\nReact Hooks have revolutionized how we write React components, allowing us to use state and lifecycle features without classes.\n\n## Common Built-in Hooks\n\n### useState\n\n```jsx\nfunction Counter() {\n  const [count, setCount] = React.useState(0);\n  \n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n```\n\n### useEffect\n\n```jsx\nfunction DataFetcher() {\n  const [data, setData] = React.useState(null);\n  \n  React.useEffect(() => {\n    fetch('https://api.example.com/data')\n      .then(response => response.json())\n      .then(data => setData(data));\n      \n    return () => {\n      // Cleanup function\n    };\n  }, []); // Empty dependency array means this runs once on mount\n  \n  return data ? <DisplayData data={data} /> : <Loading />;\n}\n```\n\n## Custom Hooks\n\nCreating custom hooks allows you to extract component logic into reusable functions.\n\n```jsx\nfunction useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n  \n  React.useEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n    \n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  \n  return size;\n}\n```\n\nHooks have transformed React development, making code more concise and easier to understand.",
    "tags": ["React", "JavaScript", "Web Development"]
  },
  {
    "id": 3,
    "title": "Building Responsive UIs with Tailwind CSS",
    "slug": "building-responsive-uis-with-tailwind-css",
    "excerpt": "Learn how to use Tailwind CSS to create beautiful, responsive user interfaces without writing custom CSS.",
    "date": "2023-07-10",
    "author": "John Doe",
    "coverImage": "/placeholder.svg",
    "isPinned": false,
    "contentMultiLang": [
      {
        "lang": "eng",
        "content": "# Building Responsive UIs with Tailwind CSS\n\nTailwind CSS is a utility-first CSS framework that allows you to build custom designs without leaving your HTML.\n\n## Getting Started\n\nAdd Tailwind to your project:\n\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\n```\n\n## Basic Responsive Design\n\nTailwind makes responsive design easy with built-in breakpoint prefixes:\n\n```html\n<div class=\"text-center md:text-left lg:text-right\">\n  This text is centered on mobile, left-aligned on tablets, \n  and right-aligned on desktops.\n</div>\n```\n\n## Creating a Responsive Card\n\n```html\n<div class=\"max-w-sm mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n  <div class=\"md:flex\">\n    <div class=\"md:shrink-0\">\n      <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"/img/card-image.jpg\" alt=\"Card Image\">\n    </div>\n    <div class=\"p-8\">\n      <div class=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">Case Study</div>\n      <a href=\"#\" class=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">Finding customers for your new business</a>\n      <p class=\"mt-2 text-slate-500\">Getting a new business off the ground is a lot of hard work. Here are five ideas you can use to find your first customers.</p>\n    </div>\n  </div>\n</div>\n```\n\nTailwind CSS's utility-first approach enables rapid UI development with built-in responsive design capabilities."
      },
      {
        "lang": "id",
        "content": "# Membangun UI Responsif dengan Tailwind CSS\n\nTailwind CSS adalah kerangka kerja CSS yang mengutamakan utilitas yang memungkinkan Anda membangun desain kustom tanpa meninggalkan HTML Anda.\n\n## Memulai\n\nTambahkan Tailwind ke proyek Anda:\n\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\n```\n\n## Desain Responsif Dasar\n\nTailwind membuat desain responsif menjadi mudah dengan prefiks breakpoint bawaan:\n\n```html\n<div class=\"text-center md:text-left lg:text-right\">\n  Teks ini berada di tengah pada ponsel, rata kiri pada tablet, \n  dan rata kanan pada desktop.\n</div>\n```\n\n## Membuat Kartu Responsif\n\n```html\n<div class=\"max-w-sm mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n  <div class=\"md:flex\">\n    <div class=\"md:shrink-0\">\n      <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"/img/card-image.jpg\" alt=\"Gambar Kartu\">\n    </div>\n    <div class=\"p-8\">\n      <div class=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">Studi Kasus</div>\n      <a href=\"#\" class=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">Menemukan pelanggan untuk bisnis baru Anda</a>\n      <p class=\"mt-2 text-slate-500\">Memulai bisnis baru membutuhkan banyak kerja keras. Berikut lima ide yang dapat Anda gunakan untuk menemukan pelanggan pertama Anda.</p>\n    </div>\n  </div>\n</div>\n```\n\nPendekatan utilitas-pertama Tailwind CSS memungkinkan pengembangan UI yang cepat dengan kemampuan desain responsif bawaan."
      }
    ],
    "content": "# Building Responsive UIs with Tailwind CSS\n\nTailwind CSS is a utility-first CSS framework that allows you to build custom designs without leaving your HTML.\n\n## Getting Started\n\nAdd Tailwind to your project:\n\n```bash\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init\n```\n\n## Basic Responsive Design\n\nTailwind makes responsive design easy with built-in breakpoint prefixes:\n\n```html\n<div class=\"text-center md:text-left lg:text-right\">\n  This text is centered on mobile, left-aligned on tablets, \n  and right-aligned on desktops.\n</div>\n```\n\n## Creating a Responsive Card\n\n```html\n<div class=\"max-w-sm mx-auto bg-white rounded-xl shadow-md overflow-hidden md:max-w-2xl\">\n  <div class=\"md:flex\">\n    <div class=\"md:shrink-0\">\n      <img class=\"h-48 w-full object-cover md:h-full md:w-48\" src=\"/img/card-image.jpg\" alt=\"Card Image\">\n    </div>\n    <div class=\"p-8\">\n      <div class=\"uppercase tracking-wide text-sm text-indigo-500 font-semibold\">Case Study</div>\n      <a href=\"#\" class=\"block mt-1 text-lg leading-tight font-medium text-black hover:underline\">Finding customers for your new business</a>\n      <p class=\"mt-2 text-slate-500\">Getting a new business off the ground is a lot of hard work. Here are five ideas you can use to find your first customers.</p>\n    </div>\n  </div>\n</div>\n```\n\nTailwind CSS's utility-first approach enables rapid UI development with built-in responsive design capabilities.",
    "tags": ["CSS", "Tailwind CSS", "Frontend", "Responsive Design"]
  }
]
